"use client";
//import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThirdwebProvider } from "@thirdweb-dev/react";
import { createThirdwebClient, defineChain, getContract } from "thirdweb";

const inter = Inter({ subsets: ["latin"] });

// create the client with your clientId, or secretKey if in a server environment
export const client = createThirdwebClient({
  clientId: "993c0da85e17bc8cb3e4bfdce30e5717",
});
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
//key secret :OJZJid0HiZtsbHbnjm9P4D1J9m9A1S2GdKuFzP8B8YZaHO8RJqnedFmaokCvasGjFH_bOnDO70tGGM_Cbdj9DQ
// connect to your contract
export const contract = getContract({
  client,
  chain: defineChain(80002),
  address: "0x5C7E546f8F6877cC44C5Db93ecD17590a80CA499",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const amoyTestnet = {
    chainId: 80002, // Example chainId, replace with the actual Amoy testnet chainId
    rpc: ["https://80002.rpc.thirdweb.com/"], // Replace with the actual Amoy testnet RPC URL
    nativeCurrency: {
      name: "Amoy Testnet Token",
      symbol: "MATIC",
      decimals: 18,
    },
    blockExplorerUrl: "https://www.oklink.com/amoy", // Replace with the actual block explorer URL if available
    name: "Polygon Amoy Testnet",
  };
  return (
    <ThirdwebProvider
      activeChain={amoyTestnet.chainId}
      clientId="993c0da85e17bc8cb3e4bfdce30e5717"
    >
      <html lang="en">
        <body className={inter.className}>{children}</body>
      </html>
    </ThirdwebProvider>
  );
}
